# Generated by Django 5.0.2 on 2025-04-02 15:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Новый плейлист', max_length=100, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='playlist_covers/', verbose_name='Обложка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Плейлист',
                'verbose_name_plural': 'Плейлисты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('artist', models.CharField(max_length=200, verbose_name='Исполнитель')),
                ('album', models.CharField(blank=True, max_length=200, null=True, verbose_name='Альбом')),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='tracks/', verbose_name='Аудио файл')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='covers/', verbose_name='Обложка')),
                ('duration', models.IntegerField(default=0, verbose_name='Длительность (сек)')),
                ('play_count', models.IntegerField(default=0, verbose_name='Количество прослушиваний')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрен')),
                ('disgen_music_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID в Disgen Music')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Трек',
                'verbose_name_plural': 'Треки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlaylistTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0)),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.playlist', verbose_name='Плейлист')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track', verbose_name='Трек')),
            ],
            options={
                'verbose_name': 'Трек в плейлисте',
                'verbose_name_plural': 'Треки в плейлистах',
                'ordering': ['-added_at'],
                'unique_together': {('playlist', 'track')},
            },
        ),
        migrations.AddField(
            model_name='playlist',
            name='tracks',
            field=models.ManyToManyField(through='music.PlaylistTrack', to='music.track', verbose_name='Треки'),
        ),
    ]
